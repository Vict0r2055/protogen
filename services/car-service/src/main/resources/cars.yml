openapi: 3.0.3
info:
  title: Car API
  description: API for managing car information
  version: 1.0.0

paths:
  /cars:
    get:
      summary: Get a list of cars
      operationId: getAllCars
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                - carId: 1
                  make: "Toyota"
                  model: "Camry"
                  year: 2022
                  color: "Red"
                  transmission: "Automatic"
                  engine: "V6"
                  fuelType: "Petrol"
                  mileage: 5000
                  vin: "ABC123"
                  price: 25000.0
                  ownerId: 123
                  features: ["bluetooth", "sunroof"]

    post:
      summary: Add a new car
      operationId: addCar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
            example:
              make: "Honda"
              model: "Civic"
              year: 2023
              color: "Blue"
              transmission: "Manual"
              engine: "Inline-4"
              fuelType: "Gasoline"
              mileage: 0
              vin: "XYZ789"
              price: 22000.0
              ownerId: 456
              features: ["bluetooth", "sunroof"]

      responses:
        '200':
          description: Car added successfully
        '500':
          description: Bad request. Check the request body for valid data.

  /cars/{carId}:
    parameters:
      - name: carId
        in: path
        required: true
        schema:
          type: integer
        description: ID of the car

    get:
      summary: Get car details by ID
      operationId: getCarById
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
            
                make: "Toyota"
                model: "Camry"
                year: 2022
                color: "Red"
                transmission: "Automatic"
                engine: "V6"
                fuelType: "Petrol"
                mileage: 5000
                vin: "ABC123"
                price: 25000.0
                ownerId: 123
                features: ["bluetooth", "sunroof"]

    put:
      summary: Update a car by ID
      operationId: updateCar
      parameters:
        - name: carId
          in: path
          description: ID of the car to update
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
      responses:
        '200':
          description: Car updated successfully
        '500':
          description: Bad request. Check the request body for valid data.

    delete:
      summary: Delete car by ID
      operationId: RemoveCar
      responses:
        '200':
          description: Car deleted successfully
        '404':
          description: Car not found

components:
  schemas:
    Car:
      type: object
      properties:
        make:
          type: string
        model:
          type: string
        year:
          type: integer
        color:
          type: string
        transmission:
          type: string
        engine:
          type: string
        fuelType:
          type: string
        mileage:
          type: integer
        vin:
          type: string
        price:
          type: number
        ownerId:
          type: integer
        features:
          type: array
          items:
            type: string
